// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AnimalDetails renders correctly 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    style={
      {
        "height": "50%",
        "overflow": "hidden",
      }
    }
  >
    <View
      accessibilityIgnoresInvertColors={true}
      style={
        {
          "flex": 1,
        }
      }
    >
      <Image
        source={
          {
            "uri": "https://example.com/medium.jpg",
          }
        }
        style={
          [
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            {
              "height": undefined,
              "width": undefined,
            },
            undefined,
          ]
        }
      />
      <View
        style={
          {
            "position": "absolute",
            "right": 8,
            "top": 8,
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              [
                {
                  "color": "white",
                  "fontSize": 20,
                },
                {
                  "marginRight": 8,
                },
                {
                  "fontFamily": "FontAwesome",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
      <View
        style={
          {
            "bottom": 8,
            "left": 8,
            "position": "absolute",
          }
        }
      >
        <View
          style={
            {
              "alignItems": "flex-end",
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              {
                "color": "white",
                "fontSize": 24,
                "fontWeight": "bold",
              }
            }
          >
            Fluffy
            , 
          </Text>
          <Text
            style={
              {
                "color": "white",
                "fontSize": 16,
              }
            }
          >
            Young
          </Text>
        </View>
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              [
                {
                  "color": "white",
                  "fontSize": 20,
                },
                {
                  "marginRight": 8,
                },
                {
                  "fontFamily": "FontAwesome",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                {},
              ]
            }
          >
            
          </Text>
          <Text
            style={
              {
                "color": "white",
                "fontSize": 16,
              }
            }
          >
            Anytown
            , 
            NY
          </Text>
        </View>
      </View>
    </View>
  </View>
  <Text
    style={
      {
        "fontSize": 16,
        "fontWeight": "bold",
        "padding": 8,
      }
    }
  >
    Introduction
  </Text>
  <Text
    style={
      {
        "fontSize": 14,
        "padding": 8,
      }
    }
  >
    A fluffy dog
  </Text>
  <Text
    style={
      {
        "fontSize": 16,
        "fontWeight": "bold",
        "padding": 8,
      }
    }
  >
    Tags
  </Text>
  <View
    style={
      {
        "flexDirection": "row",
        "flexWrap": "wrap",
        "padding": 8,
      }
    }
  >
    <View
      style={
        {
          "backgroundColor": "gray",
          "borderRadius": 8,
          "marginBottom": 8,
          "marginRight": 8,
          "paddingHorizontal": 8,
          "paddingVertical": 4,
        }
      }
    >
      <Text
        style={
          {
            "color": "white",
          }
        }
      >
        Friendly
      </Text>
    </View>
    <View
      style={
        {
          "backgroundColor": "gray",
          "borderRadius": 8,
          "marginBottom": 8,
          "marginRight": 8,
          "paddingHorizontal": 8,
          "paddingVertical": 4,
        }
      }
    >
      <Text
        style={
          {
            "color": "white",
          }
        }
      >
        Playful
      </Text>
    </View>
  </View>
  <Text
    style={
      {
        "fontSize": 16,
        "fontWeight": "bold",
        "padding": 8,
      }
    }
  >
    Gallery
  </Text>
  <RCTScrollView
    data={
      [
        {
          "full": "https://example.com/full.jpg",
          "large": "https://example.com/large.jpg",
          "medium": "https://example.com/medium.jpg",
          "small": "https://example.com/small.jpg",
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={true}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    stickyHeaderIndices={[]}
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={
          [
            {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View>
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
          >
            <Image
              source={
                {
                  "uri": "https://example.com/full.jpg",
                }
              }
              style={
                {
                  "height": 100,
                  "margin": 5,
                  "width": 100,
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
